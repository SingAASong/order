<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.protal.Mapper.FoodMapper">
  <resultMap id="BaseResultMap" type="com.protal.pojo.Food">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="food_name" jdbcType="VARCHAR" property="foodName" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="vip_price" jdbcType="DECIMAL" property="vipPrice" />
    <result column="cook_id" jdbcType="BIGINT" property="cookId" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="file" jdbcType="VARCHAR" property="file" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, food_name, price, vip_price, cook_id, company, file
  </sql>
  <select id="selectByExample" parameterType="com.protal.pojo.FoodExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from food
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from food
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from food
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.protal.pojo.FoodExample">
    delete from food
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.protal.pojo.Food">
    insert into food (id, food_name, price, 
      vip_price, cook_id, company, 
      file)
    values (#{id,jdbcType=BIGINT}, #{foodName,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{vipPrice,jdbcType=DECIMAL}, #{cookId,jdbcType=BIGINT}, #{company,jdbcType=VARCHAR}, 
      #{file,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.protal.pojo.Food">
    insert into food
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="foodName != null">
        food_name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="vipPrice != null">
        vip_price,
      </if>
      <if test="cookId != null">
        cook_id,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="file != null">
        file,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="foodName != null">
        #{foodName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="vipPrice != null">
        #{vipPrice,jdbcType=DECIMAL},
      </if>
      <if test="cookId != null">
        #{cookId,jdbcType=BIGINT},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="file != null">
        #{file,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.protal.pojo.FoodExample" resultType="java.lang.Long">
    select count(*) from food
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update food
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.foodName != null">
        food_name = #{record.foodName,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.vipPrice != null">
        vip_price = #{record.vipPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.cookId != null">
        cook_id = #{record.cookId,jdbcType=BIGINT},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.file != null">
        file = #{record.file,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update food
    set id = #{record.id,jdbcType=BIGINT},
      food_name = #{record.foodName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      vip_price = #{record.vipPrice,jdbcType=DECIMAL},
      cook_id = #{record.cookId,jdbcType=BIGINT},
      company = #{record.company,jdbcType=VARCHAR},
      file = #{record.file,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.protal.pojo.Food">
    update food
    <set>
      <if test="foodName != null">
        food_name = #{foodName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="vipPrice != null">
        vip_price = #{vipPrice,jdbcType=DECIMAL},
      </if>
      <if test="cookId != null">
        cook_id = #{cookId,jdbcType=BIGINT},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="file != null">
        file = #{file,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.protal.pojo.Food">
    update food
    set food_name = #{foodName,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      vip_price = #{vipPrice,jdbcType=DECIMAL},
      cook_id = #{cookId,jdbcType=BIGINT},
      company = #{company,jdbcType=VARCHAR},
      file = #{file,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>